{
	"info": {
		"_postman_id": "e2076f67-158d-41ce-8d63-891461896766",
		"name": "crmtesterAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43555717"
	},
	"item": [
		{
			"name": "IsServerRunning",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Server is running\", function () {",
							"    pm.response.to.have.body(\"Server is running!\");",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login should be successful\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should contain expected user data\", function () {",
							"    const json = pm.response.json();",
							"",
							"    pm.expect(json).to.have.property(\"username\", \"Master\");",
							"    pm.expect(json).to.have.property(\"role\", \"ADMIN\");",
							"    pm.expect(json).to.have.property(\"company\", \"Demo AB\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"m@email.com\",\n    \"password\": \"abc123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/login",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login should be successful\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api/login",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateEmployeeById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should respond with 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstname\": \"Updated\",\n  \"lastname\": \"User\",\n  \"email\": \"updated@email.com\",\n  \"role\": \"USER\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/users/5",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUserById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should respond with 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api/users/5",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetCompanies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"You should not have access to this\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/companies",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"companies"
					]
				}
			},
			"response": []
		},
		{
			"name": "ChangeStateTicket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should respond with 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"state\": \"CLOSED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/issues/9e5caf19-b637-4f78-9145-a8ac8f5e49f5/state",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"issues",
						"9e5caf19-b637-4f78-9145-a8ac8f5e49f5",
						"state"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTicketMessages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should respond with 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api/issues/9e5caf19-b637-4f78-9145-a8ac8f5e49f5/messages",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"issues",
						"9e5caf19-b637-4f78-9145-a8ac8f5e49f5",
						"messages"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateAdmin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let userId = parseInt(pm.environment.get(\"user_id\"));",
							"let companyId = parseInt(pm.environment.get(\"company_id\"));",
							"",
							"userId += 1;",
							"companyId += 1;",
							"",
							"pm.environment.set(\"user_id\", userId);",
							"pm.environment.set(\"company_id\", companyId);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"admin_user\",\n  \"email\": \"admin_user@example.com\",\n  \"password\": \"strong_password\",\n  \"company\": \"DemoCorp\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/users/admin",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"users",
						"admin"
					]
				}
			},
			"response": []
		}
	]
}